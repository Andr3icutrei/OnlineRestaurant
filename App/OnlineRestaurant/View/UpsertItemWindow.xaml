<Window x:Class="OnlineRestaurant.UI.View.UpsertItemWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OnlineRestaurant.UI.View"
        xmlns:extensions="clr-namespace:OnlineRestaurant.UI.Extensions"
        xmlns:converters="clr-namespace:OnlineRestaurant.UI.Converters"
        mc:Ignorable="d"
        Title="AddItemWindow" Height="550" Width="1000"
        WindowStyle="None">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/Resources/PapasButtonStyle.xaml"/>
                <ResourceDictionary Source="/View/Resources/Background.xaml"/>
                <ResourceDictionary Source="/View/Resources/FontStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:DynamicPropertyConverter x:Key="DynamicPropertyConverter"/>
            <converters:RelativeToAbsolutePathConverter x:Key="RelativeToAbsolutePathConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{StaticResource PapasPizzeriaBackground}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!--top label-->
                <RowDefinition Height="70"/>
                <RowDefinition Height="Auto"/>
                <!--name-->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <!--price-->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <!--portion quantity-->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <!--total portion-->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <!--food category-->
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Style="{StaticResource PapasPizzeriaLabelStyle}" FontSize="22">
                <TextBlock>
            Add a new item to the database!
                </TextBlock>
            </Label>

            <Label Grid.Row="2" Content="Item Name:" FontSize="20" Style="{StaticResource PapasPizzeriaLabelStyle}"/>
            <TextBox Grid.Row="4" Text="{Binding ItemNameText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="245" Height="20" HorizontalAlignment="Left" Margin="5,0,0,37" Grid.RowSpan="2"/>

            <Label Grid.Row="5" Content="Price:" FontSize="20" Style="{StaticResource PapasPizzeriaLabelStyle}"/>
            <TextBox Grid.Row="5" Text="{Binding PriceText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="NumberValidationTextBox" DataObject.Pasting="TextBox_Pasting" Width="196" Height="20" HorizontalAlignment="Left" Margin="5,37,0,0" Grid.RowSpan="3"/>

            <Label Grid.Row="8" Content="Portion quantity:" FontSize="20" Style="{StaticResource PapasPizzeriaLabelStyle}"/>
            <TextBox Grid.Row="8" Text="{Binding PortionQuantityText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="NumberValidationTextBox" DataObject.Pasting="TextBox_Pasting" Width="195" Height="20" HorizontalAlignment="Left" Margin="5,38,0,0" Grid.RowSpan="3"/>

            <Label Grid.Row="11" Content="Total quantity(kg):" FontSize="20" Style="{StaticResource PapasPizzeriaLabelStyle}"/>
            <TextBox Grid.Row="11" Text="{Binding TotalQuantityText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="NumberValidationTextBox" DataObject.Pasting="TextBox_Pasting" Width="195" Height="20" HorizontalAlignment="Left" Margin="5,38,0,0" Grid.RowSpan="3"/>

            <Label Grid.Row="14" Content="Food category:" FontSize="20" Style="{StaticResource PapasPizzeriaLabelStyle}"/>
            <ComboBox Grid.Row="15" ItemsSource="{Binding FoodCategoryItems}" DisplayMemberPath="Type" SelectedItem="{Binding SelectedFoodCategory}" SelectedIndex="{Binding SelectedFoodCategoryIndex}" Width="195" HorizontalAlignment="Left" Margin="5,20,0,0" Grid.RowSpan="2"/>

            <Grid Grid.Row="18">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Command="{Binding AddItemCommand}" Content="Add/update item" Style="{StaticResource PepperoniButtonStyle}" Width="110"/>
                <Button Grid.Column="1" Command="{Binding CancelCommand}" Content="Cancel/Exit" Style="{StaticResource PizzaButtonStyle}" Width="100"/>
            </Grid>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="364*"/>
                <ColumnDefinition Width="271*"/>
            </Grid.ColumnDefinitions>

            <DataGrid Grid.Column="0"
      x:Name="DynamicGridItemPictures"
      ItemsSource="{Binding CurrentDataItemPictures}"
      AutoGenerateColumns="False"
      CanUserAddRows="False"
      IsReadOnly="True"
      Margin="20,20,20,20"
      ColumnWidth="155"
      SelectionMode="Extended"
      SelectionUnit="FullRow"
      extensions:DataGridExtension.SelectedItems="{Binding SelectedItemPictures,Mode=TwoWay}">
                <DataGrid.Resources>
                    <!-- Override the default cell style to remove blue selection highlight -->
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=Foreground}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>

                <!-- Define columns to ensure PicturePath is included -->
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" 
                            Binding="{Binding [Id]}" 
                            Width="60"/>
                    <DataGridTextColumn Header="Picture Path" 
                            Binding="{Binding [PicturePath]}" 
                            Width="*"/>
                </DataGrid.Columns>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <!-- Default values when not selected -->
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridRow}">
                                    <Grid>
                                        <!-- Standard row content -->
                                        <Border x:Name="DGR_Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                            <SelectiveScrollingGrid>
                                                <SelectiveScrollingGrid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </SelectiveScrollingGrid.ColumnDefinitions>
                                                <SelectiveScrollingGrid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </SelectiveScrollingGrid.RowDefinitions>
                                                <DataGridCellsPresenter Grid.Column="1"
                                                         ItemsPanel="{TemplateBinding ItemsPanel}"
                                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                                            SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, 
                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                                            Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                                            ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                            Visibility="{TemplateBinding DetailsVisibility}"/>
                                                <DataGridRowHeader Grid.RowSpan="2"
                                                     SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                     Visibility="{Binding HeadersVisibility, 
                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                                            </SelectiveScrollingGrid>
                                        </Border>

                                        <!-- Custom image popup -->
                                        <Popup x:Name="ImagePopup" 
                                   IsOpen="False" 
                                   PlacementTarget="{Binding ElementName=DGR_Border}"
                                   Placement="Right"
                                   AllowsTransparency="True"
                                   PopupAnimation="Fade">
                                            <Border Background="White" 
                                        BorderBrush="DarkRed" 
                                        BorderThickness="2" 
                                        CornerRadius="8"
                                        Padding="8">
                                                <StackPanel>
                                                    <!-- Debug info -->
                                                    <TextBlock Text="{Binding [PicturePath]}" 
                                                   Foreground="Red" 
                                                   FontSize="10" 
                                                   TextWrapping="Wrap"
                                                   Margin="0,0,0,5"/>

                                                    <!-- The image using the correct indexer binding -->
                                                    <Image>
                                                        <Image.Source>
                                                            <Binding Path="[PicturePath]" Converter="{StaticResource RelativeToAbsolutePathConverter}"/>
                                                        </Image.Source>
                                                        <Image.Width>300</Image.Width>
                                                        <Image.Height>300</Image.Height>
                                                        <Image.Stretch>Uniform</Image.Stretch>
                                                    </Image>
                                                </StackPanel>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#FFEEEE"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="ImagePopup" Property="IsOpen" Value="True"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Background" Value="#FF4040"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>

            <DataGrid Grid.Column="1" x:Name="DynamicGridAllergens"
                ItemsSource="{Binding CurrentDataAllergens}"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                IsReadOnly="True"
                Margin="20,20,20,20"
                ColumnWidth="120"
                SelectionMode="Extended"
                SelectionUnit="FullRow"
                extensions:DataGridExtension.SelectedItems="{Binding SelectedAllergens,Mode=TwoWay}">
                <DataGrid.Resources>
                    <!-- Override the default cell style to remove blue selection highlight -->
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=Foreground}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <!-- Default values when not selected -->
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="#FF4040"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                            <!-- Remove the focus visual style -->
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </Grid>

    </Grid>
</Window>
